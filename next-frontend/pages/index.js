import { Contract, providers, utils } from "ethers";
import Head from "next/head";
import React, { useEffect, useRef, useState } from "react";
import Web3Modal from "web3modal";
import { NFT2_CONTRACT_ADDRESS, NFT2_ABI } from "../constant";
import styles from "../styles/Home.module.css";

export default function Home() {
  const web3ModalRef = useRef();
  const [walletConnected, setWalletConnected] = useState(false);
  const [loading, setLoading] = useState(false);
  const [tokenIdMinted, setTokenIdMinted] = useState("0");

  const getProviderOrSigner = async (needSigner = false) => {
    try {
      const provider = await web3ModalRef.current.connect();
      const web3Provider = new providers.Web3Provider(provider);

      const { chainId } = await web3Provider.getNetwork();
      if (chainId !== 80001) {
        window.alert("Pls change network to Mumbai Polygon");
        throw new Error("Pls change network to Mumbai Polygon");
      }

      if (needSigner) {
        const signer = web3Provider.getSigner();
        return signer;
      }

      return web3Provider;
    } catch (error) {
      console.error(error);
    }
  };

  const connectWallet = async () => {
    try {
      await getProviderOrSigner();
      setWalletConnected(true);
    } catch (error) {
      console.error(error);
    }
  };

  const publicMint = async () => {
    try {
      const signer = await getProviderOrSigner(true);
      const contract = new Contract(NFT2_CONTRACT_ADDRESS, NFT2_ABI, signer);
      const tx = await contract.mint({ value: utils.parseEther("0.001") });
      setLoading(true);
      await tx.wait();
      setLoading(false);
      window.alert("You succesfully Minted a WST NFT");
    } catch (error) {
      console.error(error);
      setLoading(false);
    }
  };

  const getTokensIdMinted = async () => {
    try {
      const provider = await getProviderOrSigner();
      const contract = new Contract(NFT2_CONTRACT_ADDRESS, NFT2_ABI, provider);
      const _tokenMinted = await contract.tokenIds();
      setTokenIdMinted(_tokenMinted.toString());
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    if (!walletConnected) {
      web3ModalRef.current = new Web3Modal({
        network: "mumbai",
        providerOptions: {},
        disableInjectedProvider: false,
      });
      connectWallet();
    }
    setInterval(async function () {
      await getTokensIdMinted();
    }, 5 * 1000);
    getTokensIdMinted();
  }, []);

  const renderButton = () => {
    if (!walletConnected) {
      return (
        <button onClick={connectWallet} className={styles.button}>
          Connect your wallet
        </button>
      );
    }

    if (loading) {
      return <button className={styles.button}>Loading...</button>;
    }

    return (
      <button className={styles.button} onClick={publicMint}>
        Public Mint ðŸš€
      </button>
    );
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>WST 2 NFT Collection</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.main}>
        <div>
          <h1 className={styles.title}>Welcome to WanShiTong</h1>
          <div className={styles.description}>
            Its an NFT collection for fans of WanShiTong.
          </div>
          <div className={styles.description}>
            {tokenIdMinted}/10 have been minted
          </div>
          {renderButton()}
        </div>
        <div>
          <img className={styles.image} src="/Owl.jpg" />
        </div>
      </div>

      <footer className={styles.footer}>Made with &#10084; by Script</footer>
    </div>
  );
}
